# CodevTT Installation Doc


## System Requirements:
>  + 128M RAM
>  + 200M HD

> #### Linux
  + Apache 2.2.x
  + MySQL 5.1.x
  + PHP 5.3.x
  + phpMyAdmin 3.2.x
  + Mantis 1.2.x

> #### Windows XP
  + XAMPP Lite 1.7.3
  + Mantis 1.2.x

> #### Dev tools (optional)
  + Git 1.7.x
  + netbeans
  + kdiff3

## prerequisites

> #### install software

> + Required packages (CentOS, RedHat, Fedora)  

>> `yum install git gitosis gitk`  
>> `yum install httpd php php-pdo php-mysql php-gd php-xml mysql mysql-server phpmyadmin`  

> + MantisBT

>> `cd /opt`  
>> `unzip /tmp/mantisbt-1.2.11.zip`  
>> `mv /opt/mantisbt-1.2.11 /opt/mantis`  
>> `chgrp apache /opt/mantis`  
>> `chmod g+w /opt/mantis`  
>> `cd /var/www/html`  
>> `ln -s /opt/mantis`  

> + CodevTT

>> `cd /opt`  
>> `tar xvzf /tmp/codevtt_0.99.18.tgz`  
>> `mv /opt/codevtt_0.99.18 /opt/codevtt`  
>> `chgrp apache /opt/codevtt`  
>> `chmod g+w /opt/codevtt`  
>> `cd /var/www/html`  
>> `ln -s /opt/codevtt`  

>> If you choose to install the latest development sources:  

>> `git clone git@github.com:lbayle/codev.git /opt/codevtt`  


> #### configure MySQL

     

>   + post-install config

>>   `mysql_secure_installation`

>   + Edit file: `/etc/my.cnf`  

>>  `[mysqld]`  
>>  `query_cache_limit=4M`  
>>  `query_cache_size=32M`  
>>  `query_cache_type=1`  

>>  `max_allowed_packet      = 64M`

> #### Firewall
>  + Open HTTP and HTTPS
>>  `system-config-firewall`  

>  + Disable SELINUX: Edit file: `/etc/selinux/config`  
>>  `SELINUX=disabled`

> #### configure Apache

>   + Edit file: `/etc/httpd/conf/httpd.conf`  

>>  `ServerName codevtt:80`  

>>  `<Directory "/var/www/html">`  
>>  `  (...)`  
>>  `  # AllowOverride controls what directives may be placed in .htaccess files.`  
>>  `  AllowOverride All`  
>>  `  (...)`  
>>  `</Directory>`  

> #### configure PHP

>   + Edit file: `/etc/php.ini`  

>>  `[Date]`  
>>  `; Defines the default timezone used by the date functions`  
>>  `date.timezone = Europe/Paris`  

>   + On windows you will also need to add in the [PHP] section

>>  `extension=php_gd2.dll`

> #### Restart services

>>  `service mysqld restart`  
>>  `service httpd  restart`  

>>  Check Apache server is up: [http://localhost](http://localhost)

## Install MantisBT

> Note: Mantis install is sometimes a little 'tricky' and it turns out that it works better if you first create the DB and the config file.

> #### create mantis DB & user

>>  `mysql --user=root --password=xxxxxx mysql`  
>>  `mysql> create database bugtracker;`  
>>  `mysql> CREATE USER 'mantis'@'localhost' IDENTIFIED BY 'secret';`  
>>  `mysql> GRANT ALL PRIVILEGES ON bugtracker.* TO 'mantis'@'localhost' WITH GRANT OPTION;`  
>>  `mysql> exit`  

> #### minimal mantis config

>>  `cp /opt/mantis/config_inc.php.sample /opt/mantis/config_inc.php`  
>>  `vi /opt/mantis/config_inc.php`  

>>>  `$g_db_username   = "mantis";`  
>>>  `$g_db_password   = "secret";`  
>>>  `$g_send_reset_password = OFF;`  
>>>  `$g_validate_email = OFF;`  


> #### mantis installation

>>  [http://localhost/mantis/admin/check.php](http://localhost/mantis/admin/check.php)  
>>  [http://localhost/mantis/admin/install.php](http://localhost/mantis/admin/install.php)  

> #### first mantis login
>>  [http://localhost/mantis](http://localhost/mantis)

>  + login  : `administrator`
>  + passwd : `root`

> #### customize mantis
> -- IMPORTANT --  
> You need to configure mantis BEFORE installing CodevTT, so do it now !  

>  + Status
>  + Workflow
>  + Thresholds
>  + Projects
>  + etc.

## Install CodevTT

> #### create mysql user
(Optional: You can use the mantis user)  

>  `mysql --user=root --password=xxxxxx mysql`  
>>  `CREATE USER 'codevtt' IDENTIFIED BY 'secret';`  
>>  `GRANT ALL PRIVILEGES ON bugtracker.* TO 'codevtt' WITH GRANT OPTION;`  
>>  `exit`  

> #### launch CodevTT install procedure

>>  [http://localhost/codevtt](http://localhost/codevtt)

>> The installation will create `/opt/codevtt/config.ini`

## The End.

